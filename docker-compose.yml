version: '3.8'
services:

    app:
        build:
            context: .
            dockerfile: app.dockerfile
        image: andreabreu76/laravel
        container_name: app_learn
        restart: unless-stopped
        environment:
            - DB_HOST=db_learn
            - DB_USERNAME=learn_user
            - DB_DATABASE=learn_db
            - DB_PASSWORD=learn_pass
            - SESSION_DRIVER=redis
            - REDIS_HOST=redis_learn
            - QUEUE_DRIVER=redis
        volumes:
            - ./laravel:/var/www
            - ./config/php/local.ini:/usr/local/etc/php/conf.d/local.ini

    webserver:
        build:
            context: .
            dockerfile: nginx.dockerfile
        image: andreabreu76/nginx
        container_name: web_learn
        restart: unless-stopped
        ports:
            - "8080:80"
        volumes:
            - ./:/var/www
            - ./config/nginx/conf.d/:/etc/nginx/conf.d/
        depends_on:
            - app

    mariadb:
        build:
            context: .
            dockerfile: mariadb.dockerfile
        image: andreabreu76/mariadb
        container_name: db_learn
        environment:
            - TZ=America/Sao_Paulo
            - ALLOW_EMPTY_PASSWORD=no
            - MYSQL_ROOT_PASSWORD=learn_root
            - MYSQL_USER=learn_user
            - MYSQL_DATABASE=learn_db
            - MYSQL_PASSWORD=learn_pass
        ports:
            - 3306:3306
        volumes:
            - dbdata:/var/lib/mysql

#    golang:
#        build:
#            context: .
#            dockerfile: golang.dockerfile
#        image: andreabreu76/golang
#        container_name: golang_learn
#        restart: unless-stopped
#        ports: 
#            - "8000:8000"
#        depends_on: 
#            - redis
#        volumes: 
#            - ./golang/:/go/src/app

    redis:
        build:
            context: .
            dockerfile: redis.dockerfile
        image: andreabreu76/redis
        container_name: redis_learn

    mongo:
      build:
          context: .
          dockerfile: mongo.dockerfile
      image: andreabreu76/mongo
      container_name: db_mongo
      restart: always
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: rootpass

    mongo-express:
      build:
          context: .
          dockerfile: ex.dockerfile
      image: andreabreu76/mongo-express
      container_name: mongo-admin
      restart: always
      ports:
        - 8081:8081
      environment:
        ME_CONFIG_MONGODB_ADMINUSERNAME: root
        ME_CONFIG_MONGODB_ADMINPASSWORD: rootpass

    db_postgres:
      build:
          context: .
          dockerfile: postgres.dockerfile
      image: andreabreu76/postgres
      container_name: app_postgres
      environment:
        - POSTGRES_DB=postgres
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
      ports:
        - "5432:5432"

    python:
      build:
          context: .
          dockerfile: python.dockerfile
      image: andreabreu76/python
      container_name: web_python
      command: python manage.py runserver 0.0.0.0:8000
      volumes:
        - ./django:/code
      ports:
        - "8088:8000"
      depends_on:
        - db_postgres

volumes:
    dbdata:
        driver: local
